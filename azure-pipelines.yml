trigger:
  branches:
    exclude:
      - main

pr:
  branches:
    include:
      - "*"
    exclude:
      - main

stages:
  - stage: CI
    displayName: "Build & Test"
    condition: or(
      eq(variables['Build.Reason'], 'PullRequest'),
      ne(variables['Build.SourceBranch'], 'refs/heads/main')
    )
    jobs:
      - job: BuildAndTest
        displayName: "Build and run tests"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '8.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - script: dotnet build --configuration Release
            displayName: 'Build project'

          - script: dotnet test --configuration Release
            displayName: 'Run tests'

  - stage: CD
    displayName: "Deploy to Azure Web App"
    condition: and(
      succeeded(),
      eq(variables['Build.SourceBranch'], 'refs/heads/main')
    )
    jobs:
      - deployment: DeployWebApp
        displayName: "Deploy to Azure Web App"
        environment: 'production'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '8.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - script: dotnet publish --configuration Release --output $(Build.ArtifactStagingDirectory)
            displayName: 'Publish project'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true

          - task: AzureWebApp@1
            inputs:
              azureSubscription: '<NOME_DA_CONEXAO_DE_SERVICO>'
              appType: 'webApp'
              appName: '<NOME_DO_SEU_WEBAPP>'
              package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'